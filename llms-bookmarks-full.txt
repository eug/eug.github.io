# Bookmarks

A collection of 734 bookmarks from the blog.

- [Self-Taught Engineers Often Outperform](https://michaelbastos.com/blog/why-self-taught-engineers-often-outperform)
- [Phrase origin: Why do we “call” functions?](https://quuxplusone.github.io/blog/2025/04/04/etymology-of-call/)
- [Shit’s Gonna Get So Fucking Weird and Terrible](https://sonderuncertainly.substack.com/p/shits-gonna-get-so-fucking-weird)
- [Coding Without a Laptop - Two Weeks with AR Glasses and Linux on Android](https://holdtherobot.com/blog/2025/05/11/linux-on-android-with-ar-glasses/)
- [I-Con: A unifying framework for representation learning](https://arxiv.org/pdf/2504.16929)
- [Spaced Repetition Systems Have Gotten Way Better](https://domenic.me/fsrs/)
- [I'd rather read the prompt](https://claytonwramsey.com/blog/prompt/)
- [AI 2027](https://ai-2027.com/)
- [Emerging Patterns in Building GenAI Products](https://martinfowler.com/articles/gen-ai-patterns/)
- [The Startup CTO's Handbook](https://github.com/ZachGoldberg/Startup-CTO-Handbook/blob/main/StartupCTOHandbook.md)
- [A Visual Guide to LLM Agents](https://newsletter.maartengrootendorst.com/p/a-visual-guide-to-llm-agents)
- [Radio Sailing](https://www.onemetre.net/)
- [Prompting vs JSON Mode vs Function Calling vs Constrained Generation vs SAP](https://www.boundaryml.com/blog/schema-aligned-parsing)
- [How Cursor Indexes Codebases Fast](https://read.engineerscodex.com/p/how-cursor-indexes-codebases-fast)
- [How Cursor (AI IDE) Works](https://blog.sshh.io/p/how-cursor-ai-ide-works)
- [Amateur Telescope Making](https://stellafane.org/tm/atm/)
- [How I Learned to Stop Worrying and Love the Bot](https://www.harpersbazaar.com/culture/features/a63510531/ai-boyfriend-emotional-labor-explained-essay/)
- [Software Development with AI: Isolation and Abstraction](https://blog.codeyam.com/p/software-development-with-ai-isolation)
- [Founder Mode](https://paulgraham.com/foundermode.html)
- [Cognitive load is what matters](https://minds.md/zakirullin/cognitive)
- [Build a Low-Cost Drone Using ESP32](https://news.ycombinator.com/item?id=42498648)
- [llms.txt directory](https://directory.llmstxt.cloud)
- [Accountability sinks](https://aworkinglibrary.com/writing/accountability-sinks)
- [A Distributed Systems Reading List](https://dancres.github.io/Pages/)
- [SMURF: Beyond the Test Pyramid](https://testing.googleblog.com/2024/10/smurf-beyond-test-pyramid.html)
- [Being Raised by the Internet](https://jimmyhmiller.github.io/raised)
- [Building A Generative AI Platform](https://huyenchip.com/2024/07/25/genai-platform.html)
- [How to Build Anything Extremely Quickly](https://learnhowtolearn.org/how-to-build-extremely-quickly/)
- [Creativity Fundamentally Comes From Memorization](https://shwin.co/blog/creativity-fundamentally-comes-from-memorization)
- [What We’ve Learned From A Year of Building with LLMs](https://applied-llms.org)
- [How big a deal was the Industrial Revolution?](https://lukemuehlhauser.com/industrial-revolution/)
- [Law for Computer Scientists](https://lawforcomputerscientists.pubpub.org)
- [Model Boat Plans Store](https://www.building-model-boats.com/model-boat-plans-store.html)
- [The Secret Language of Ships](https://hakaimagazine.com/videos-visuals/the-secret-language-of-ships/)
- [0x01f - AI and Startup Moats](https://unzip.dev/0x01f-ai-and-startup-moats/)
- [The Law of Leaky Abstractions](https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/)
- [Software Design is Knowledge Building](https://olano.dev/blog/software-design-is-knowledge-building)
- [That's Not an Abstraction, That's Just a Layer of Indirection](https://fhur.me/posts/2024/thats-not-an-abstraction)
- [On the nature of Computing Science (EWD 896)](https://www.cs.utexas.edu/~EWD/transcriptions/EWD08xx/EWD896.html)
- [The State of Data Engineering in 2024: Key Insights and Trends](https://www.dataengineeringweekly.com/p/the-state-of-data-engineering-in)
- [Data Modeling with Sums and Products](https://funktionale-programmierung.de/2024/11/25/sums-products-english.html)
- [Make it Yourself](https://makeityourself.org)
- [Situational Awareness: The Decade Ahead](https://situational-awareness.ai/)
- [A taste of categorical logic](https://abuseofnotation.github.io/category-theory-illustrated/05_logic/)
- [Mamba: The Easy Way](https://jackcook.com/2024/02/23/mamba.html)
- [Spreadsheets-are-all-you-need](https://spreadsheets-are-all-you-need.ai/index.html)
- [The State of Generative AI, 2024](https://www.thealgorithmicbridge.com/p/the-state-of-generative-ai-2024)
- [A Visual Guide to Vision Transformers](https://blog.mdturp.ch/posts/2024-04-05-visual_guide_to_vision_transformer.html)
- [Embeddings are a good starting point for the AI curious app developer](https://blog.bawolf.com/p/embeddings-are-a-good-starting-point)
- [gWhy the CORDIC algorithm lives rent-free in my head](https://github.com/francisrstokes/githublog/blob/main/2024/5/10/cordic.md)
- [Agents aren’t all you need](https://www.parcha.com/blog/agents-arent-all-you-need)
- [Uncensor any LLM with abliteration](https://huggingface.co/blog/mlabonne/abliteration)
- [Cached Thoughts](https://www.lesswrong.com/posts/2MD3NMLBPCqPfnfre/cached-thoughts)
- [Typical flow a SaaS company might take from 0 to unicorn status.](https://map.sistilli.dev/public/startups/startups)
- [Your AI Product Needs Evals](https://hamel.dev/blog/posts/evals/)
- [Galileo ChainPoll: A High Efficacy Method for LLM Hallucination Det](https://www.rungalileo.io/blog/chainpoll)
- [Engineering Principles for Building Financial Systems](https://substack.wasteman.codes/p/engineering-principles-and-best-practices)
- [My advice for how to use LLMs in your product.](https://lethain.com/mental-model-for-how-to-use-llms-in-products/)
- [Fructose – LLM calls as strongly typed functions](https://news.ycombinator.com/item?id=39619053)
- [GPT in 60 Lines of NumPy by Jay Mody](https://jaykmody.com/blog/gpt-from-scratch/)
- [Large Language Models in Five Formulas](https://youtube.com/watch?v=KCXDr-UOb9A&si=J1AHp3829ks3VBNs)
- [Retrieval-Augmented Generation for Large Language Models: A Survey](https://arxiv.org/pdf/2312.10997v3.pdf)
- [Stanford CS25: V3 I Retrieval Augmented Language Models](https://youtube.com/watch?v=mE7IDf2SmJg&si=ceSlaSJ56ZEvKffv)
- [Good Books on Philosophy of Engineering](https://news.ycombinator.com/item?id=39057219)
- ["Attention", "Transformers", in Neural Network "Large Language Models"](http://bactra.org/notebooks/nn-attention-and-transformers.html)
- [Mechanical Watch – Bartosz Ciechanowski](https://ciechanow.ski/mechanical-watch/)
- [Neural Networks: Zero to Hero](https://karpathy.ai/zero-to-hero.html)
- [LLM Visualization](https://bbycroft.net/llm)
- [Periodic Table of Tools](https://periodictableoftools.com/index.html)
- [Numbers every LLM Developer should know](https://github.com/ray-project/llm-numbers)
- [Generative AI for Beginners](https://microsoft.github.io/generative-ai-for-beginners/#/)
- [LLM Powered Autonomous Agents](https://lilianweng.github.io/posts/2023-06-23-agent/)
- [Building LLM applications for production](https://huyenchip.com/2023/04/11/llm-engineering.html)
- [Generative AI Strategy](https://huyenchip.com/2023/06/07/generative-ai-strategy.html)
- [Mitigating LLM Hallucinations: a multifaceted approach](https://amatriain.net/blog/hallucinations)
- [State of AI 2023](https://docs.google.com/presentation/d/156WpBF_rGvf4Ecg19oM1fyR51g4FAmHV3Zs0WLukrLQ/mobilepresent)
- [AI and Open Source in 2023](https://magazine.sebastianraschka.com/p/ai-and-open-source-in-2023)
- [Large Language Models (in 2023) - YouTube](https://www.youtube.com/watch?v=dbo3kNKPaUA&t=4)
- [Why AutoGPT engineers ditched vector databases](https://dariuszsemba.com/blog/why-autogpt-engineers-ditched-vector-databases/)
- [Multi-modal prompt injection image attacks against GPT-4V](https://simonwillison.net/2023/Oct/14/multi-modal-prompt-injection/)
- [Five Design Principles for Building a Data Pipeline Engine](https://docs.tenzir.com/blog/five-design-principles-for-building-a-data-pipeline-engine)
- [Embeddings: What they are and why they matter](https://simonwillison.net/2023/Oct/23/embeddings/)
- [Demystifying Advanced RAG Pipelines](https://github.com/pchunduri6/rag-demystified)
- [Understanding AI: LLM Basics for Investors](https://deepwatermgmt.com/understanding-ai-llm-basics-for-investors/)
- [Building RAG-based LLM Applications for Production (Part 1)](https://www.anyscale.com/blog/a-comprehensive-guide-for-building-rag-based-llm-applications-part-1)
- [From Copilot to Pilot: Towards AI Supported Software Development](https://arxiv.org/abs/2303.04142)
- [Evaluating LLM Outputs](https://txt.cohere.com/evaluating-llm-outputs/)
- [How to make history with LLMs and other generative models](https://leighmariebraswell.substack.com/p/how-to-make-history-with-llms-and)
- [The C4 model for visualising software architecture](https://c4model.com/)
- [The boiling frog of digital freedom](https://gazoche.xyz/posts/boiling-frog/)
- [Generative AI is just a phase. What’s next is interactive AI.](https://www.technologyreview.com/2023/09/15/1079624/deepmind-inflection-generative-ai-whats-next-mustafa-suleyman/amp/)
- [The Complete Beginners Guide To Autonomous Agents](https://www.mattprd.com/p/the-complete-beginners-guide-to-autonomous-agents)
- [The mathematical reason why agencies get stuck at $50k MRR – Jakob Greenfel](http://jakobgreenfeld.com/agency-model)
- [How is LLaMa.cpp possible?](https://finbarr.ca/how-is-llama-cpp-possible/)
- [The Mathematics of Training LLMs](https://www.latent.space/p/transformers-math#details)
- [Open challenges in LLM research](https://huyenchip.com/2023/08/16/llm-research-open-challenges.html)
- [Fine-Tuning Llama-2: A Comprehensive Case Study for Tailoring Models to Uni](https://www.anyscale.com/blog/fine-tuning-llama-2-a-comprehensive-case-study-for-tailoring-models-to-unique-applications)
- [Consulting For Equity: 4 Factors You Can't Afford To Ignore](https://www.consultingsuccess.com/consulting-for-equity)
- [Private GPT: Fine-Tune LLM on Enterprise Data](https://towardsdatascience.com/private-gpt-fine-tune-llm-on-enterprise-data-7e663d808e6a)
- [LLM’s for Enterprise – Generative Q&A on Your Private Knowledge Base](https://medium.com/towards-generative-ai/llms-for-enterprises-architecture-for-generative-q-a-on-your-private-knowledge-base-a7c2e07690e8)
- [LLMs Unleashed: The Power of Fine-Tuning](https://lucaspauker.com/articles/llms-unleashed-the-power-of-fine-tuning)
- [What We Know About LLMs (Primer)](https://willthompson.name/what-we-know-about-llms-primer)
- [Design Patterns for LLM Systems and Products](https://eugeneyan.com/writing/llm-patterns/)
- [Which Vector Database Should I Use? A Comparison Cheatsheet](https://navidre.medium.com/which-vector-database-should-i-use-a-comparison-cheatsheet-cb330e55fca)
- [A brief history of computers](https://news.ycombinator.com/item?id=36826210)
- [Goodbye Web Forms, Hello Chat Messages](https://www.getzep.com/goodbye-web-forms-hello-chat-messages/)
- [The Lone Banana Problem. Or, the new programming: “speaking” AI](https://www.digital-science.com/tldr/article/the-lone-banana-problem-or-the-new-programming-speaking-ai/)
- [Writing as a Form of Thinking](https://lopespm.com/notes/2023/07/02/writing-as-a-form-of-thinking.html)
- [What are embeddings?](https://vickiboykis.com/what_are_embeddings/)
- [Emerging Architectures for LLM Applications](https://a16z.com/2023/06/20/emerging-architectures-for-llm-applications/)
- [Basics of Proofs](https://theory.stanford.edu/~jvondrak/MATH108-2017/Proofs.pdf)
- [The unconventional Palantir principles that catalyzed a generation of start](https://www.lennysnewsletter.com/p/the-unconventional-palantir-principles)
- [Introducing Chat Notebooks: Integrating LLMs into the Notebook Paradigm](https://writings.stephenwolfram.com/2023/06/introducing-chat-notebooks-integrating-llms-into-the-notebook-paradigm/)
- [AI Expert Roadmap](https://i.am.ai/roadmap/#introduction)
- [The AI Programmer's Bookshelf](http://alumni.media.mit.edu/~jorkin/aibooks.html)
- [Generative AI is Coming for Insurance](https://a16z.com/2023/05/31/generative-ai-is-coming-for-insurance-may-2023-fintech-newsletter/)
- [AI Canon](https://a16z.com/2023/05/25/ai-canon/)
- [What is platform engineering?](https://platformengineering.org/blog/what-is-platform-engineering)
- [A Prompt Pattern Catalog to Enhance Prompt Engineering with ChatGPT](https://arxiv.org/abs/2302.11382)
- [GPT Production best practices](https://platform.openai.com/docs/guides/production-best-practices)
- [Applying LLMs to Enterprise Data: Concepts, Concerns, and Hot-Takes](https://towardsdatascience.com/applying-llms-to-enterprise-data-concepts-concerns-and-hot-takes-e19ded4bde88)
- [How to create a private ChatGPT that interacts with your local documents](https://bdtechtalks.com/2023/06/01/create-privategpt-local-llm/)
- [Manifesto on the Teaching of Mathematics](https://intellectualmathematics.com/manifesto/)
- [Decoupling a core service from your monolith the right way](https://betterprogramming.pub/decoupling-a-core-service-from-your-monolith-the-right-way-ffa6b8e05f5c)
- [How To Finetune GPT Like Large Language Models on a Custom Dataset](https://lightning.ai/pages/blog/how-to-finetune-gpt-like-large-language-models-on-a-custom-dataset/)
- [Let's build GPT: from scratch, in code, spelled out. - YouTube](https://www.youtube.com/watch?v=kCc8FmEb1nY)
- [AI Like ChatGPT Are No Good at ‘Not’](https://www.quantamagazine.org/ai-like-chatgpt-are-no-good-at-not-20230512/)
- [Muscle Wiki](https://musclewiki.com/bodyweight/male/abdominals/hand-plank)
- [Violent enough to stand still](https://woodfromeden.substack.com/p/violent-enough-to-stand-still)
- [Rosy retrospection - Wikipedia](https://en.wikipedia.org/wiki/Rosy_retrospection)
- [10 Types of 30-Year-Old Single Guys](https://wait-but-why-production.mystagingwebsite.com/2013/10/10-types-of-30-year-old-single-guys.html)
- [Formal Algorithms for Transformers](https://arxiv.org/abs/2207.09238)
- [The Car Mechanics Video Course from How a Car Works](https://www.howacarworks.com/video-course)
- [Prompt injection: what’s the worst that can happen?](https://simonwillison.net/2023/Apr/14/worst-that-can-happen/)
- [Nutritional psychiatry: Your brain on food - Harvard Health](https://www.health.harvard.edu/blog/nutritional-psychiatry-your-brain-on-food-201511168626)
- [What Are Transformer Models and How Do They Work?](https://txt.cohere.com/what-are-transformer-models/)
- [Brandolini&#39;s law - Wikipedia](https://en.wikipedia.org/wiki/Brandolini%27s_law)
- [Prompt Engineering vs. Blind Prompting – Mitchell Hashimoto](https://mitchellh.com/writing/prompt-engineering-vs-blind-prompting)
- [Machine Learning System Design](https://www.manning.com/books/machine-learning-system-design)
- [6 Asset Allocation Strategies That Work](https://www.investopedia.com/investing/6-asset-allocation-strategies-work/)
- [Machine Learing Compilation](https://mlc.ai/chapter_introduction/index.html#what-is-ml-compilation)
- [Fundamentals of Data Visualization](https://clauswilke.com/dataviz/)
- [Google's corporate culture revealed through internal comics](https://goomics.net/)
- [What Is ChatGPT Doing … and Why Does It Work?—Stephen Wolfram Writings](https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-does-it-work/)
- [Systems design explains the world (2021)](https://apenwarr.ca/log/20201227)
- [Paper Models of Vintage Computers](http://rockybergen.com/papercraft)
- [Understanding and Coding the Self-Attention Mechanism of Large Language Mod](https://sebastianraschka.com/blog/2023/self-attention-from-scratch.html)
- [Money Laundering and AML Compliance](https://www.bitsaboutmoney.com/archive/money-laundering-and-aml-compliance/)
- [Life Without God: The Implications of Atheism](http://www.hamzatzortzis.com/life-without-god-the-implications-of-atheism/)
- [Who Wants to Play the Status Game?](https://thepointmag.com/examined-life/who-wants-to-play-the-status-game-agnes-callard/)
- [The Evolution of Trust](https://ncase.me/trust/)
- [Machine Learning Students Overfit to Overfitting](https://arxiv.org/pdf/2209.03032.pdf)
- [DDD: Definitions and Pattern Summaries](https://www.domainlanguage.com/wp-content/uploads/2016/05/DDD_Reference_2015-03.pdf)
- [Designing Data Products](https://www.datamesh-architecture.com/data-product-canvas)
- [The Modern Data Teams Hub](https://amplifypartners.com/moderndatateamshub/)
- [MLOps Architecture Guide](https://neptune.ai/blog/mlops-architecture-guide)
- [Driving Revenue: A Breakdown for Data-Driven Companies](https://www.koombea.com/blog/driving-revenue-breakdown-business-models-data-driven-companies/)
- [Business Model: Data as a service](https://reasonstreet.co/business-model-data-as-a-service/)
- [A Beginner’s Introduction to Mixed Effects Models](https://meghan.rbind.io/blog/2022-06-28-a-beginners-guide-to-mixed-effects-models/)
- [The Trimodal Nature of Software Engineering Salaries in the Netherlands and Europe](https://blog-pragmaticengineer-com.cdn.ampproject.org/c/s/blog.pragmaticengineer.com/software-engineering-salaries-in-the-netherlands-and-europe/amp/)
- [Mental Model: Difficult Problems vs. Hard Work](https://benjamincongdon.me/blog/2022/06/22/Mental-Model-Difficult-Problems-vs.-Hard-Work/)
- [Mental Models: The Best Way to Make Intelligent Decisions](https://fs.blog/mental-models)
- [Mental Models I Find Repeatedly Useful](https://medium.com/@yegg/mental-models-i-find-repeatedly-useful-936f1cc405d)
- [Effective Mental Models for Code and Systems](https://copyconstruct.medium.com/effective-mental-models-for-code-and-systems-7c55918f1b3e)
- [Mental Models: Tools for better thinking](https://untools.co)
- [11 Principles of Engineering Management](https://acjay.com/2022/03/11/11-principles-of-engineering-management/)
- [Case Study: Marketing Mix Modeling with Social Media And Google](https://forecastegy.com/posts/marketing-mix-models/)
- [Blockchain and Machine Learning](https://youtu.be/pqO7zapN5jY)
- [What is data architecture? A framework for managing data](https://www.cio.com/article/190941/what-is-data-architecture-a-framework-for-managing-data.html)
- [CS 329S: Machine Learning Systems Design](https://stanford-cs329s.github.io/syllabus.html?)
- [Documento de expectativas Manager-report](http://lgmoneda.github.io/2022/03/12/expectativas-manager-report.html)
- [The Code Review Pyramid](https://www.morling.dev/blog/the-code-review-pyramid/)
- [The different types of events in event-driven systems](https://blog.frankdejonge.nl/the-different-types-of-events-in-event-driven-systems/)
- [Emerging Architectures for Modern Data Infrastructure](https://a16z.com/emerging-architectures-for-modern-data-infrastructure/)
- [The simple system I'm using to stay in touch with hundreds of people](https://jakobgreenfeld.com/stay-in-touch)
- [Guide To Decentralized Finance](https://finematics.com/guide-to-decentralized-finance/)
- [How Not to Bomb Your Offer Negotiation](https://haseebq.com/how-not-to-bomb-your-offer-negotiation/)
- [Ten Rules for Negotiating a Job Offer](https://haseebq.com/my-ten-rules-for-negotiating-a-job-offer/)
- [What's wrong with MLOps?](https://laszlo.substack.com/p/whats-wrong-with-mlops)
- [An Incomplete Guide to Rollups](https://vitalik.ca/general/2021/01/05/rollup.html)
- [Optimistic Rollups](https://ethereum.org/en/developers/docs/scaling/optimistic-rollups/)
- [The 48 Laws of Power by Robert Greene Summary](https://www.nateliason.com/notes/48-laws-power-robert-greene)
- [The 10 Must-Read Psychology Books Every Human Being Should Read](https://durmonski.com/reading-lists/must-read-psychology-books/)
- [Understanding AWK](https://earthly.dev/blog/awk-examples/)
- [why is everything so hard in a large organization?](https://graphthinking.blogspot.com/2021/09/why-is-everything-so-hard-in-large.html?m=1)
- [Under the Hood of Uber’s Experimentation Platform](https://eng.uber.com/xp/)
- [Why every data scientist should pay attention to crypto](https://link.medium.com/qEOGKZsvglb)
- [How Computationally Complex Is a Single Neuron?](https://www.quantamagazine.org/how-computationally-complex-is-a-single-neuron-20210902/)
- [The Simple System for Organizing Your Digital Life in Seconds](https://fortelabs.co/blog/para/)
- [Improving a Machine Learning System](https://danshiebler.com/2021-11-06-ml-systems-1/)
- [Remote work will break the US monopoly on global talent](https://devonzuegel.com/post/remote-work-will-break-the-us-monopoly-on-talent)
- [Zillow Just Gave Us A Look At Machine Learning's Future](https://vinvashishta.substack.com/p/zillow-just-gave-us-a-look-at-machine)
- [Timeline of HUman Condition](https://www.southampton.ac.uk/~cpd/history.html)
- [To Learn a New Language, Read Its Standard Library](http://patshaughnessy.net/2021/10/23/to-learn-a-new-language-read-its-standard-library)
- [Assumptions of Logistic Regression](https://datamahadev.com/assumptions-of-logistic-regression/)
- [Patterns in Confusing Explanations](https://jvns.ca/blog/confusing-explanations/)
- [Naval Architecture by Bartosz Ciechanowski](https://ciechanow.ski/naval-architecture/)
- [MLOps Course - Made With ML](https://madewithml.com/)
- [Building a data team at a mid-stage startup: a short story](https://erikbern.com/2021/07/07/the-data-team-a-short-story.html)
- [Lessons learned building an ML trading system that turned $5k into $200k](https://www.tradientblog.com/2019/11/lessons-learned-building-an-ml-trading-system-that-turned-5k-into-200k/)
- [How to develop, test and optimize a trading strategy](https://miltonfmr.com/how-to-develop-test-and-optimize-a-trading-strategy-complete-guide/)
- [Little Data: The 25 KPIs Everyone Must Understand](https://www.google.com/amp/s/www.smartdatacollective.com/little-data-25-kpis-everyone-must-understand/amp/)
- [Personal knowledge management - Wikipedia](https://en.wikipedia.org/wiki/Personal_knowledge_management)
- [The Different Types of Cryptocurrency Tokens Explained](https://blog.makerdao.com/the-different-types-of-cryptocurrency-tokens-explained/)
- [What Remote Work Really Does To Your Engineering Productivity](https://www.okayhq.com/blog/what-remote-work-really-does-to-your-engineering-productivity)
- [A pattern language for microservices](https://microservices.io/patterns/index.html)
- [Algorithms by Jeff Erickson](http://jeffe.cs.illinois.edu/teaching/algorithms/)
- [Tutorial: Learning Curves for Machine Learning in Python for Data Science](https://www.dataquest.io/blog/learning-curves-machine-learning/)
- [Implementing a Data Lake or Data Warehouse Architecture for BI](https://towardsdatascience.com/implementing-a-data-lake-architecture-for-business-intelligence-f2c99551db1a)
- [How to write readable code](http://jeremymikkola.com/posts/2021_02_02_how_to_write_readable_code.html)
- [ARCHITECTURE.md](https://matklad.github.io//2021/02/06/ARCHITECTURE.md.html)
- [Complexity Explained](https://complexityexplained.github.io/)
- [The documentation system](https://documentation.divio.com/)
- [System Design](https://github.com/anitsh/til/issues/192/)
- [Software Architecture: The Most Important Architectural Patterns You Need It](https://levelup.gitconnected.com/software-architecture-the-important-architectural-patterns-you-need-to-know-a1f5ea7e4e3d)
- [Object Reorientation: Classes](http://www.gigamonkeys.com/book/object-reorientation-classes.html)
- [The Gervais Principle, Or The Office According to “The Office”](https://www.ribbonfarm.com/2009/10/07/the-gervais-principle-or-the-office-according-to-the-office/)
- [Why personality tests for bank loans are a bad idea](https://theconversation.com/why-personality-tests-for-bank-loans-are-a-bad-idea-47373)
- [How to get promoted](https://www.spakhm.com/p/how-to-get-promoted)
- [Unpopular ideas about social norms by Julia Galef](https://juliagalef.com/2017/08/23/unpopular-ideas-about-social-norms/)
- [Unpopular ideas about politics and economics by Julia Galef](https://juliagalef.com/2017/08/23/unpopular-ideas-about-political-and-economic-systems/)
- [Data Warehouse Architecture, Concepts and Components](https://www.guru99.com/data-warehouse-architecture.html)
- [Using Apache Airflow to build reusable ETL on AWS Redshift - Sonra](https://sonra.io/2018/01/01/using-apache-airflow-to-build-a-data-pipeline-on-aws/)
- [Complexity Theory 101: Problems Classification](https://towardsdatascience.com/complexity-theory-101-problems-classification-9793f05e42e1)
- [Recommended Canon SL2 Settings](https://photographylife.com/recommended-canon-sl2-settings)
- [A megacorp is not your dream job](https://drewdevault.com/2021/01/01/Megacorps-are-not-your-dream-job.html)
- [What leader are you? It depends on your parents](https://www.bbc.com/worklife/article/20200406-what-leader-are-you-it-depends-on-your-parents)
- [To the brain, reading computer code is not the same as reading language](https://news.mit.edu/2020/brain-reading-computer-code-1215)
- [Cameras and Lenses by Bartosz Ciechanowski](https://ciechanow.ski/cameras-and-lenses/)
- [Is probability real?](https://www.arameb.com/blog/2020/11/22/probability)
- [The Purpose Of Writing](https://limitlesscuriosity.com/the-purpose-of-writing/)
- [How to Write Well: 4 Steps to Improve Your Writing](https://adamfaliq.wordpress.com/2020/10/28/write-well/)
- [Fast and Scalable Outlier Detection with Sorted Hypercubes](https://dl.acm.org/doi/10.1145/3340531.3412033)
- [How Social Isolation Affects the Brain](https://www.the-scientist.com/features/how-social-isolation-affects-the-brain-67701)
- [Reinforcement learning is supervised learning on optimized data](http://bair.berkeley.edu/blog/2020/10/13/supervised-rl/)
- [2014: Auction Design — The Golden Goose Award](https://www.goldengooseaward.org/01awardees/auction-design)
- [Ask HN: How to learn sales?](https://news.ycombinator.com/item?id=24601579)
- [SME Credit Score Factor](https://www.openriskmanual.org/wiki/SME_Credit_Score_Factor)
- [SME Credit Risk Literature](https://www.openriskmanual.org/wiki/SME_Credit_Risk_Literature)
- [Quantamental: What It Is? Why It Works](https://analyzingalpha.com/quantamental)
- [Bret Victor, beast of burden](http://worrydream.com/)
- [How one code review rule turned my team into a dream team](https://medium.com/inside-league/how-one-code-review-rule-turned-my-team-into-a-dream-team-fdb172799d11)
- [Problem-Solving Techniques That Work for All Types of Challenges (2017)](https://www.spencergreenberg.com/2017/06/1514/)
- [Build tools around workflows, not workflows around tools](https://thesephist.com/posts/tools/)
- [Taming the Tail: Adventures in Improving AI Economics](https://a16z.com/2020/08/12/taming-the-tail-adventures-in-improving-ai-economics/)
- [10 things you can learn in 10 minutes that will change your life](https://en.168.am/2017/02/25/14318.html)
- [Potential future exposure - Wikipedia](https://en.wikipedia.org/wiki/Potential_future_exposure)
- [Does credit risk need an expected shortfall-style revamp?](https://www.risk.net/our-take/6287736/does-credit-risk-need-an-expected-shortfall-style-revamp)
- [A Simple Example of Pipeline in Machine Learning with Scikit-learn](https://towardsdatascience.com/a-simple-example-of-pipeline-in-machine-learning-with-scikit-learn-e726ffbb6976)
- [Machine Learning: Challenges and Opportunities in Credit Risk Modeling](https://www.moodysanalytics.com/risk-perspectives-magazine/managing-disruption/spotlight/machine-learning-challenges-lessons-and-opportunities-in-credit-risk-modeling)
- [New Lending Models using Machine Learning](https://medium.com/analytics-vidhya/lending-models-using-machine-learning-d59d57f28ad7)
- [50 Ideas That Changed My Life by David Perell](https://www.perell.com/blog/50-ideas-that-changed-my-life)
- [Risk Based Pricing](https://blegrange.wordpress.com/tag/risk-based-pricing/)
- [Mental Models for Designers](https://brand.dropbox.com/)
- [Monitoring Machine Learning Models in Production](https://christophergs.com/machine%20learning/2020/03/14/how-to-monitor-machine-learning-models/)
- [Forecasting: Principles and Practice](https://otexts.com/fpp2/)
- [Photography and Linux](https://www.linuxjournal.com/content/photography-and-linux)
- [Time Series Analysis and Forecasting with ARIMA](https://kanoki.org/2020/04/30/time-series-analysis-and-forecasting-with-arima-python/)
- [Best Practices for Working with Configuration in Python Applications](https://tech.preferred.jp/en/blog/working-with-configuration-in-python/)
- [Making Data Science Work](https://medium.com/sequoia-capital/making-data-science-work-db71fb9e1da1)
- [From Data to AI with the Machine Learning Canvas (Part I)](https://medium.com/louis-dorard/from-data-to-ai-with-the-machine-learning-canvas-part-i-d171b867b047)
- [Designing Data Products](https://towardsdatascience.com/designing-data-products-b6b93edf3d23)
- [RICE: Prioritization for product managers](https://www.intercom.com/blog/rice-simple-prioritization-for-product-managers/)
- [Data Science: Reality Doesn't Meet Expectations](https://dfrieds.com/articles/data-science-reality-vs-expectations.html)
- [Demystifying data science roles](https://towardsdatascience.com/what-kind-of-data-science-role-is-right-for-you-9d2f4b117e81)
- [Continuous Delivery for Machine Learning](https://martinfowler.com/articles/cd4ml.html)
- [How to analyse 100 GB of data on your laptop with Python](https://towardsdatascience.com/how-to-analyse-100s-of-gbs-of-data-on-your-laptop-with-python-f83363dda94)
- [Monitoring in the time of Cloud Native](https://medium.com/@copyconstruct/monitoring-in-the-time-of-cloud-native-c87c7a5bfa3e)
- [How to Deploy Machine Learning Models](https://christophergs.github.io/machine%20learning/2019/03/17/how-to-deploy-machine-learning-models/#pipelines)
- [The Cost of Financing a Car (Car Loans)](https://towardsdatascience.com/the-cost-of-financing-a-new-car-car-loans-c00997f1aee)
- [The big picture of Operations Research](https://towardsdatascience.com/the-big-picture-of-operations-research-8652d5153aad)
- [Every Data Scientist needs to read these Simulation stories](https://towardsdatascience.com/every-data-scientist-needs-to-read-these-simulation-stories-7be0531e782f)
- [The Necessity of Musical Hallucinations](http://m.nautil.us/issue/77/underworldsnbsp/the-necessity-of-musical-hallucinations-rp)
- [Mega list of 1 on 1 meeting questions](https://github.com/VGraupera/1on1-questions)
- [12 Signs You’re Working in a Feature Factory](https://cutle.fish/blog/12-signs-youre-working-in-a-feature-factory)
- [The Horrifically Dystopian World of Software Engineering Interviews](https://www.jarednelsen.dev/posts/The-horrifically-dystopian-world-of-software-engineering-interviews)
- [Why Do Incompetent Managers Get Promoted?](https://medium.com/@lancengym/why-do-incompetent-managers-get-promoted-815165a03bee)
- [On Building Effective Data Science Teams](https://www.kdnuggets.com/2019/03/building-effective-data-science-teams.html)
- [Case Study: How To Build A High Performance Data Science Team](https://www.business-science.io/business/2018/09/18/data-science-team.html)
- [The AI Hierarchy of Needs](https://hackernoon.com/the-ai-hierarchy-of-needs-18f111fcc007)
- [Statistical data type - Wikipedia](https://en.wikipedia.org/wiki/Statistical_data_type)
- [Principios de Modelagem Preditiva](https://andlima.github.io/principios-preditiva)
- [Um guia para reuniões “one on one” com lideranças](http://lgmoneda.github.io/2020/01/20/guia-de-one-on-one.html)
- [What's wrong with computational notebooks?](http://web.eecs.utk.edu/~azh/blog/notebookpainpoints.html)
- [Why I Keep a Research Blog](http://gregorygundersen.com/blog/2020/01/12/why-research-blog/)
- [The School of Life: SELF](https://www.youtube.com/playlist?list=PLwxNMb28XmpckOvZZ_AZjD7WM2p9-6NBv)
- [Picking The Best Model: A Whirlwind Tour of Model](https://www.kaggle.com/lavanyashukla01/picking-the-best-model-a-whirlwind-tour-of-model)
- [Ensemble methods: bagging, boosting and stacking](https://towardsdatascience.com/ensemble-methods-bagging-boosting-and-stacking-c9214a10a205)
- [Some examples of people quickly accomplishing ambitious things together](https://patrickcollison.com/fast)
- [Relearning Matrices as Linear Functions](https://www.dhruvonmath.com/2018/12/31/matrices/)
- [A Road Map for Data Science](https://towardsdatascience.com/a-road-map-for-data-science-d1977504a72b)
- [The Standard of Code Review](https://google.github.io/eng-practices/review/reviewer/standard.html#conflicts)
- [Google Testing Blog: Code Health: Respectful Reviews == Useful Reviews](https://testing.googleblog.com/2019/11/code-health-respectful-reviews-useful.html)
- [How To Market Yourself As a Programmer](https://medium.com/better-programming/how-to-market-yourself-as-a-programmer-e145635ba534)
- [Introduction to Adversarial Machine Learning](https://blog.floydhub.com/introduction-to-adversarial-machine-learning/)
- [The Qualified Manifesto On Hiring Software Developers](https://www.qualified.io/blog/posts/the-qualified-manifesto-on-hiring-software-developers)
- [Cornell CS4780: Machine Learning for Intelligent Systems](https://www.youtube.com/playlist?list=PLl8OlHZGYOQ7bkVbuRthEsaLr7bONzbXS)
- [Don't Call Yourself a Programmer, and Other Career Advice (2011)](https://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/)
- [Credit Bureaus: The Record Keepers](https://research.stlouisfed.org/publications/page1-econ/2017/12/01/credit-bureaus-the-record-keepers)
- [How Not To Run an A/B Test](http://www.evanmiller.org/how-not-to-run-an-ab-test.html)
- [Early stopping](http://betatim.github.io/posts/early-stopping/)
- [Philosophy of Statistics](https://plato.stanford.edu/entries/statistics/)
- [Online courses vs. colleges for software engineering](https://www.raahul.me/posts/online-courses-vs-colleges/)
- [Hyper-Personalization: What It Is and Why You Need It](https://www.convinceandconvert.com/research/hyper-personalization/)
- [The Complete Guide to Effective Reading](https://medium.com/@maartenvandoorn/the-complete-guide-to-effective-reading-fc1835937757)
- [The Science Behind How Fast Humans Can Read](https://collegeinfogeek.com/speed-reading-science/)
- [What are the dangers of automating the statistical modeling process?](https://www.quora.com/What-are-the-dangers-of-automating-the-statistical-modeling-process)
- [Roadmap for Choosing Between Statistical Modeling and Machine Learning](https://www.fharrell.com/post/stat-ml/)
- [The Curse of Dimensionality](https://www.inf.fu-berlin.de/inst/ag-ki/rojas_home/documents/tutorials/dimensionality.pdf)
- [A 2019 Guide for Automatic Speech Recognition](https://heartbeat.fritz.ai/a-2019-guide-for-automatic-speech-recognition-f1e1129a141c)
- [The Book of Five Rings by Miyamoto Musashi: Summary, Notes, and Lessons](https://www.nateliason.com/notes/book-five-rings-miyamoto-musashi)
- [The 50th Law by Robert Green: Summary, Notes, and Lessons](https://www.nateliason.com/notes/50th-law-robert-greene)
- [Words that Work by Frank Luntz: Summary, Notes and Lessons](https://www.nateliason.com/notes/words-work-frank-luntz)
- [What to do once you admit that decentralizing everything never seems to work](https://hackernoon.com/decentralizing-everything-never-seems-to-work-2bb0461bd168)
- [Learning to Prove Theorems via Interacting with Proof Assistants](https://arxiv.org/abs/1905.09381)
- [Slate Star Codex](https://slatestarcodex.com/)
- [How to Build Good Software](https://www.csc.gov.sg/articles/how-to-build-good-software)
- [All the best engineering advice I stole from non-technical people](https://medium.com/@bellmar/all-the-best-engineering-advice-i-stole-from-non-technical-people-eb7f90ca2f5f)
- [Visual Information Theory](https://colah.github.io/posts/2015-09-Visual-Information/)
- [The Nativity (scientifically accurate version)](https://www.theguardian.com/science/brain-flapping/2013/dec/12/nativity-science-accurate)
- [Decoded: GNU coreutils](https://www.maizure.org/projects/decoded-gnu-coreutils/index.html)
- [Machine Learning teams have a people problem](https://medium.com/thelaunchpad/machine-learning-teams-have-a-people-problem-a69f231d3587)
- [Discourse ethics - Wikipedia](https://en.m.wikipedia.org/wiki/Discourse_ethics)
- [Hermeneutics - Wikipedia](https://en.wikipedia.org/wiki/Hermeneutics)
- [How to do hard things](https://www.drmaciver.com/2019/05/how-to-do-hard-things/)
- [All in One - Mathematics Cheat Sheet](https://github.com/ourway/Mathematics-all-in-one-cheat-sheet/blob/main/mathematics_cheat_sheet.pdf)
- [Self-Distancing: What It Is and How You Can Use It to Make Better Decisions](https://effectiviology.com/self-distancing-rational-decisions/)
- [Publish or perish: Where are we heading?](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3999612/)
- [Why so many data scientists are leaving their jobs](https://towardsdatascience.com/why-so-many-data-scientists-are-leaving-their-jobs-a1f0329d7ea4)
- [The most difficult thing in data science: politics](https://www.rdisorder.eu/2017/09/13/most-difficult-thing-data-science-politics/)
- [Modern SAT solvers: fast, neat and underused](https://codingnest.com/modern-sat-solvers-fast-neat-underused-part-1-of-n/)
- [Leonardo Da Vinci's To-Do List Proves He's a True Renaissance Man](https://mymodernmet.com/leonardo-da-vinci-to-do-list/)
- [Guidelines on writing a research proposal](https://www2.hawaii.edu/~matt/proposal.html)
- [Feature Engineering: Encoding cyclical continuous features](https://ianlondon.github.io/blog/encoding-cyclical-features-24hour-time/)
- [Best Practices for Feature Engineering](https://elitedatascience.com/feature-engineering-best-practices)
- [From Neutrinos to Data Science](http://blog.davidkaleko.com/feature-engineering-cyclical-features.html)
- [Spaced Repetition for Efficient Learning](https://www.gwern.net/Spaced-repetition)
- [Assumptions of Linear Regression](https://www.statisticssolutions.com/assumptions-of-linear-regression/)
- [Picking The Right Skills For A Resume](https://resumeskills.us/)
- [What is Judea Pearl's work on causality in a nutshell?](https://www.quora.com/What-is-Judea-Pearls-work-on-causality-in-a-nutshell)
- [Data Science vs. Decision Science](https://medium.com/@ibobriakov/data-science-vs-decision-science-infographic-7ad6e16698d)
- [How to write a technical paper](https://homes.cs.washington.edu/~mernst/advice/write-technical-paper.html)
- [How to give a technical presentation (how to give a scientific talk)](https://homes.cs.washington.edu/~mernst/advice/giving-talk.html)
- [How to Write a Talk Proposal](https://www.usenix.org/blog/how-write-talk-proposal)
- [What? Who? Why? — A Guide To Writing Your Tech Talk Proposal](https://blog.usejournal.com/what-who-why-a-guide-to-writing-your-tech-talk-proposal-for-ghc-2019-5a610c99d98c)
- [A Gentle Introduction to Text Summarization in Machine Learning](https://blog.floydhub.com/gentle-introduction-to-text-summarization-in-machine-learning/)
- [You Should Organize a Study Group/Book Club/Online Group/Event! Tips on How](http://stephaniehurlburt.com/blog/2019/3/27/you-should-organize-a-study-groupbook-clubonline-groupevent-tips-on-how-to-do-it)
- [Random Forests for Complete Beginners](https://victorzhou.com/blog/intro-to-random-forests/)
- [Think Like a Freak: Summary](https://medium.com/@franticrock/think-like-a-freak-steven-d-levitt-and-stephen-j-dubner-book-summaries-ep44-30ab0de8f4e9)
- [How to Deliver Constructive Feedback in Difficult Situations](https://medium.dave-bailey.com/the-essential-guide-to-difficult-conversations-41f736e63ccf)
- [How NOT to hire a software engineer](http://tonsky.me/blog/hiring/)
- [Geert Hofstede’s Cultural Dimensions](https://clearlycultural.com/geert-hofstede-cultural-dimensions/)
- [Supervised Learning cheatsheet](https://stanford.edu/~shervine/teaching/cs-229/cheatsheet-supervised-learning)
- [Why Facts Don’t Change Our Minds](https://www.newyorker.com/magazine/2017/02/27/why-facts-dont-change-our-minds)
- [Data Factories](https://stratechery.com/2018/data-factories/)
- [Indie Hackers](https://www.indiehackers.com/)
- [12 Factor CLI Apps](https://medium.com/@jdxcode/12-factor-cli-apps-dd3c227a0e46)
- [New Theory Cracks Open the Black Box of Deep Learning](https://www.quantamagazine.org/new-theory-cracks-open-the-black-box-of-deep-learning-20170921/)
- [What Makes a Kaggler Valuable?](https://www.kaggle.com/andresionek/what-makes-a-kaggler-valuable)
- [Machine Learning Often a Complicated Way of Replicating Simple Forecasting Methods in Financial Market Forecasting](https://medium.com/@mikeharrisNY/machine-learning-often-a-complicated-way-of-replicating-simple-forecasting-methods-in-financial-25c38db2f624)
- [Synthetic Data Generation: A must-have skill for new data scientists](https://www.kdnuggets.com/2018/12/synthetic-data-generation-must-have-skill.html)
- [Crème grows gourds in moulds to create biodegradable](https://www.dezeen.com/2018/07/31/creme-creates-sustainable-plastic-cup-alternative-from-gourds/)
- [Neural Networks Are Essentially Polynomial Regression](https://matloff.wordpress.com/2018/06/20/neural-networks-are-essentially-polynomial-regression/)
- [How to Become a Machine Learning Engineer: A Comprehensive Guide](https://www.springboard.com/blog/how-to-become-a-machine-learning-engineer/)
- [Autoregressive Models in Deep Learning — A Brief Survey](https://eigenfoo.xyz/deep-autoregressive-models/)
- [Autoregressive Models](https://deepgenerativemodels.github.io/notes/autoregressive/)
- [Viewing Matrices and Probability as Graphs](https://www.math3ma.com/blog/matrices-probability-graphs)
- [Immersive Math](http://immersivemath.com/ila/index.html)
- [Famous Laws of Software Development](https://www.timsommer.be/famous-laws-of-software-development/)
- [Max Dama on Automated Trading](http://isomorphisms.sdf.org/maxdama.pdf)
- [Ask HN: How bad is freelancing?](https://news.ycombinator.com/item?id=19133864)
- [Ask HN: What are some great personal blogs/portfolios?](https://news.ycombinator.com/item?id=19114037)
- [Google Search Operators: The Complete List (42 Advanced Operators)](https://ahrefs.com/blog/google-advanced-search-operators/)
- [Google Interview Problems: Synonymous Queries](https://medium.com/@alexgolec/google-interview-problems-synonymous-queries-36425145387c)
- [The Brain Is a Context Machine](http://nautil.us/issue/68/context/why-the-brain-is-so-noisy)
- [Trouble hiring senior engineers? It's probably you](https://hiringengineersbook.com/post/trouble-hiring/)
- [Tensor Considered Harmful](http://nlp.seas.harvard.edu/NamedTensor)
- [Machine Learning Trick of the Day (8): Instrumental Thinking](http://blog.shakirm.com/2018/10/machine-learning-trick-of-the-day-8-instrumental-thinking/)
- [The Importance of Human Interpretable Machine Learning](https://towardsdatascience.com/human-interpretable-machine-learning-part-1-the-need-and-importance-of-model-interpretation-2ed758f5f476)
- [Programming as Theory Building](https://gist.github.com/eug/6d4f2e1dccedc4874979eb41e87b99e8)
- [A blogging style guide](https://robertheaton.com/2018/12/06/a-blogging-style-guide/)
- [The Fountainhead: Defesa de Howard Roark](http://www.akitaonrails.com/2011/02/04/off-topic-the-fountainhead-defesa-de-howard-roark)
- [Direitos do Homem](http://www.akitaonrails.com/2009/09/09/off-topic-direitos-do-homem)
- [The Data Science Workflow](https://medium.com/@kt.era.ee/the-data-science-workflow-43859db0415)
- [Deep Learning for the Masses (...and the semantic layer)](https://www.kdnuggets.com/2018/11/deep-learning-masses-semantic-layer.html)
- [How to Deal with Difficult People on Software Projects](https://www.howtodeal.dev/)
- [20 Questions To Ask Before Joining A Startup](https://hharnisc.github.io/2018/11/25/twenty-questions-to-ask-before-joining-a-startup.html)
- [The Two Cultures: statistics vs. machine learning?](http://stats.stackexchange.com/questions/6/the-two-cultures-statistics-vs-machine-learning)
- [Translating Between Statistics and Machine Learning](https://insights.sei.cmu.edu/sei_blog/2018/11/translating-between-statistics-and-machine-learning.html)
- [Interpreting Linear Prediction Models](https://www.datascienceblog.net/post/machine-learning/linear_models/)
- [Butterick’s Practical Typography](https://practicaltypography.com/)
- [Linear Regression with NumPy](https://www.cs.toronto.edu/~frossard/post/linear_regression/#mjx-eqn-eqdl_db)
- [Interview Guide to Probability Distributions](https://medium.com/acing-ai/interview-guide-to-probability-distributions-a6dfb08c3766)
- [Simpson’s Paradox: How to Prove Opposite Arguments with the Same Data](https://willkoehrsen.github.io/statistics/data%20science/simpsons-paradox-how-to-prove-two-opposite-arguments-using-one-dataset/)
- [Programming Paradigms for Dummies: What Every Programmer Should Know](https://www.info.ucl.ac.be/~pvr/VanRoyChapter.pdf)
- [Three Sales Mistakes Software Engineers Make](https://www.pipelinedb.com/blog/three-sales-mistakes-software-engineers-make)
- [Book Review: A Philosophy of Software Design](http://www.pathsensitive.com/2018/10/book-review-philosophy-of-software.html)
- [Most Initial Conversations Go Better Than People Think](https://blogs.scientificamerican.com/anthropology-in-practice/most-initial-conversations-go-better-than-people-think/)
- [Paper Airplane Designs](https://www.foldnfly.com/#/1-1-1-1-1-1-1-1-2)
- [How I hacked modern Vending Machines](https://hackernoon.com/how-i-hacked-modern-vending-machines-43f4ae8decec)
- [Networking for Nerds](https://blog.benjaminreinhardt.com/networking-for-nerds/)
- [CS 598: Statistical Reinforcement Learning](http://nanjiang.cs.illinois.edu/cs598/)
- [Foundations of Machine Learning](https://cs.nyu.edu/~mohri/ml12/)
- [EECS598: Theoretical Foundations of Machine Learning](http://web.eecs.umich.edu/~jabernet/eecs598course/fall2015/web/)
- [Let's Put the Polls to some Real Use: Signaling to Vlad Zamfir](https://www.reddit.com/r/ethtrader/comments/9ll7dl/lets_put_the_polls_to_some_real_use_signaling_to/)
- [Advanced Uses of SHAP Values](https://www.kaggle.com/dansbecker/advanced-uses-of-shap-values)
- [Interpretable Machine Learning with XGBoost](https://towardsdatascience.com/interpretable-machine-learning-with-xgboost-9ec80d148d27)
- [The Private Blockchain Fallacy](https://berk.es/2018/09/19/the-private-blockchain-fallacy/)
- [Modern Code Review: A Case Study at Google](https://sback.it/publications/icse2018seip.pdf)
- [How to fail as a new engineering manager](https://blog.usejournal.com/how-to-fail-as-a-new-engineering-manager-30b5fb617a)
- [Mental Models: The Best Way to Make Intelligent Decisions](https://fs.blog/mental-models/)
- [Cognitive Bias Codex](https://www.visualcapitalist.com/wp-content/uploads/2017/09/cognitive-bias.jpg)
- [A collection of dataviz caveats](https://www.data-to-viz.com/caveats.html)
- [Financial Times Visual Vocabulary](https://github.com/Financial-Times/chart-doctor/blob/main/visual-vocabulary/poster.png)
- [Cheat Sheets for Visualization Techniques](https://visualizationcheatsheets.github.io/)
- [15 Types of Regression you should know](https://www.r-bloggers.com/15-types-of-regression-you-should-know/)
- [11 Things I Wish I Knew When I Started My Business](https://medium.com/@StephStClaire/11-things-i-wish-i-knew-when-i-started-my-business-3dc264023df5)
- [Why businesses fail at machine learning](https://hackernoon.com/why-businesses-fail-at-machine-learning-fbff41c4d5db)
- [How to Beat Linkedin: The Game](https://theoutline.com/post/5495/how-to-beat-linked-in-the-game)
- [Autopsy of a deep learning paper](https://blog.piekniewski.info/2018/07/14/autopsy-dl-paper/)
- [Troubling Trends in Machine Learning Scholarship](http://approximatelycorrect.com/2018/07/10/troubling-trends-in-machine-learning-scholarship/)
- [Competitive Content Marketing Analysis Methods](https://contentmarketinginstitute.com/2017/10/competitive-content-marketing-analysis/)
- [5 Differences Between Reporting and Analysis](http://www.infinitdatum.com/blog/5-differences-between-reporting-and-analysis)
- [How To Debug Your Approach To Data Analysis](https://www.fusioncharts.com/blog/common-biases-data-analysis/)
- [Market and Competitive Landscape Analysis: An Outline to Jumpstart Innovation](https://gurulocity.com/market-competitive-landscape-analysis-outline/)
- [Growth hacking - Wikipedia](https://en.wikipedia.org/wiki/Growth_hacking)
- [Objectives of market analysis](https://beamexchange.org/guidance/analysis/objectives-market-analysis/)
- [Market Research Techniques for technology startups](https://www.marsdd.com/mars-library/market-research-techniques-for-technology-startups/)
- [The matrix calculus you need for deep learning](http://explained.ai/matrix-calculus/index.html)
- [Guide to Angel Investing](https://anishgodha.com/2018/06/15/guide-to-angel-investing/)
- [AI Nationalism](https://www.ianhogarth.com/blog/2018/6/13/ai-nationalism)
- [How to be a Manager](https://getweeklyupdate.com/manager-guide)
- [Shifting from Central Planning to a Decentralised Economy: Do we Need Central Banks?](https://professorwerner.org/shifting-from-central-planning-to-a-decentralised-economy-do-we-need-central-banks/)
- [Why I Write Letters to CEOs (and What I've Learned by Doing So)](https://www.johnwdefeo.com/articles/why-i-write-letters-to-ceos)
- [The Importance of Deep Work & The 30-Hour Method for Learning a New Skill |](https://azeria-labs.com/the-importance-of-deep-work-the-30-hour-method-for-learning-a-new-skill/)
- [Dynamic Programming: 7 Steps to Solve any DP Interview Problem](http://blog.refdash.com/dynamic-programming-tutorial-example/)
- [Scientific debt](http://varianceexplained.org/r/scientific-debt)
- [Fonts for Complex Data](https://www.typography.com/blog/fonts-for-complex-data)
- [Competitive Programmer’s Handbook](https://cses.fi/book.pdf)
- [The Art of Effective Visualization of Multi-dimensional Data](https://towardsdatascience.com/the-art-of-effective-visualization-of-multi-dimensional-data-6c7202990c57)
- [How to decide what to build](https://miikahuttunen.com/december-2022/how-to-decide-what-to-build-daniel-gross)
- [Productivity by Sam Altman](https://blog.samaltman.com/productivity)
- [Web Application Penetration Testing Cheat Sheet](https://jdow.io/blog/2018/03/18/web-application-penetration-testing-methodology/)
- [The Game of Everything, Part 1: Making Civilization](https://www.filfre.net/2018/03/the-game-of-everything-part-1-making-civilization/)
- [Things that have surprised me having started a school](https://threadreaderapp.com/thread/972346041189019648.html)
- [Visualizing Outliers](https://flowingdata.com/2018/03/07/visualizing-outliers)
- [Damn the Org Chart](http://boz.com/articles/damn-the-org-chart.html)
- [A Career Cold Start Algorithm](http://boz.com/articles/career-cold-start.html)
- [Decentralised courts and blockchains](https://ftalphaville.ft.com/2016/04/29/2160502/decentralised-courts-and-blockchains/)
- [Let’s have no managers, instead of managers with no engineering experience](https://medium.com/@posttweetism/lets-have-no-managers-instead-of-managers-with-no-engineering-experience-e8b7cd29d398)
- [No HackerRank](https://gist.github.com/fasiha/496d78a3ce9357cdec0a18f919407d2e)
- [Let's Learn About Waveforms](http://waveforms.surge.sh/waveforms-intro)
- [People leave managers, not companies](https://blog.intercom.com/people-leave-managers-not-companies/)
- [Laws of UX](https://lawsofux.com/)
- [Inequality in nature and society](http://www.pnas.org/content/114/50/13154.full)
- [How I went from $100-an-hour programming to $X0,000-a-week consulting](https://training.kalzumeus.com/newsletters/archive/consulting_1)
- [The Conference Speaker Investment](http://jakewharton.com/the-conference-speaker-investment/)
- [How to write the perfect pull request](https://github.com/blog/1943-how-to-write-the-perfect-pull-request)
- [Clojure Design Patterns](http://mishadoff.com/blog/clojure-design-patterns/)
- [Should you hire a data engineer instead of a data scientist?](https://www.marcel.is/de/)
- [10 Lessons of an MIT Education](http://www.math.tamu.edu/~cyan/Rota/mitless.html)
- [Strategy: How to Develop, Structure and Shape a Winning System](https://chrisbolman.com/strategy-develop-effective-framework/)
- [Scaling the GitLab database](https://about.gitlab.com/2017/10/02/scaling-the-gitlab-database/)
- [A manifesto for Agile data science](https://www.oreilly.com/ideas/a-manifesto-for-agile-data-science)
- [Seven habits of effective text editing](http://moolenaar.net/habits.html)
- [Five Minute Guide to Software Security](https://www.oneupsecurity.com/research/five-minute-guide-to-software-security/)
- [The Brain vs Deep Learning](http://timdettmers.com/2015/07/27/brain-vs-deep-learning-singularity/)
- [What every software engineer should know about search](https://medium.com/startup-grind/what-every-software-engineer-should-know-about-search-27d1df99f80d)
- [Ask HN: What books have made the biggest impact on your mental models?](https://news.ycombinator.com/item?id=15155833)
- [Satellite Image Segmentation: a Workflow with U-Net](https://vooban.com/en/tips-articles-geek-stuff/satellite-image-segmentation-workflow-with-u-net/)
- [Book Summary: Fooled by Randomness by Taleb](http://jamesclear.com/book-summaries/fooled-by-randomness)
- [An Absurdly Complete Guide to Understanding Whiskey](https://www.eater.com/drinks/2015/8/13/9113965/whiskey-guide)
- [Discover structure behind data with decision trees](http://vooban.com/en/tips-articles-geek-stuff/discover-structure-behind-data-with-decision-trees/)
- [Anomaly Detection of Time Series Data Using Machine Learning & Deep Learning](https://www.xenonstack.com/blog/anomaly-detection-of-time-series-data-using-machine-learning-deep-learning)
- [Game Programming Patterns](https://gameprogrammingpatterns.com/)
- [Analyzing GitHub, how developers change programming languages over time](https://blog.sourced.tech/post/language_migrations/)
- [WTF is Ethereum?](http://whatthefuckisethereum.com/#nerd)
- [Mastering Programming](https://www.facebook.com/notes/kent-beck/mastering-programming/1184427814923414)
- [Learnable Programming](http://worrydream.com/LearnableProgramming/)
- [An introduction to Support Vector Machines (SVM)](https://monkeylearn.com/blog/introduction-to-support-vector-machines-svm/)
- [Code Health: Too Many Comments on Your Code Reviews?](https://testing.googleblog.com/2017/06/code-health-too-many-comments-on-your.html?m=1)
- [Minimizing the Negative Log-Likelihood](http://willwolf.io/2017/05/18/minimizing_the_negative_log_likelihood_in_english/)
- [Education of a Programmer](https://hackernoon.com/education-of-a-programmer-aaecf2d35312)
- [A successful Git branching model](http://nvie.com/posts/a-successful-git-branching-model)
- [How Champions Think In Sports And Life: Summary](http://briandoddonleadership.com/2016/11/29/30-lessons-about-how-champions-think-in-sports-and-life/)
- [The Non-Technical Guide to Machine Learning &amp; Artificial Intelligence](https://machinelearnings.co/a-humans-guide-to-machine-learning-e179f43b67a0)
- [Programmer Competency Matrix](http://sijinjoseph.com/programmer-competency-matrix/)
- [How to Write a Git Commit Message](http://chris.beams.io/posts/git-commit/)
- [Facebook’s code quality problem](https://www.darkcoding.net/software/facebooks-code-quality-problem/)
- [5 User Engagement Metrics: What are DAU, WAU, MAU ratios, and D1, D30?](http://blog.popcornmetrics.com/5-user-engagement-metrics-for-growth/)
- [Kaggle Ensembling Guide](http://mlwave.com/kaggle-ensembling-guide/)
- [Core algorithms deployed](http://cstheory.stackexchange.com/questions/19759/core-algorithms-deployed/19773)
- [Computer Science and Engineering](http://4chan-science.wikia.com/wiki/Computer_Science_and_Engineering)
- [id Software Programming Principles](http://blog.felipe.rs/2017/02/25/id-software-programming-principles/)
- [Machine Learning From Scratch](https://github.com/eriklindernoren/ML-From-Scratch)
- [How to Be Antifragile: Live Like a Hydra](https://medium.com/@buster/live-like-a-hydra-c02337782a89)
- [Software Engineering at Google](https://arxiv.org/pdf/1702.01715.pdf)
- [A Peanut History of Philosophy](http://expressiveegg.org/2017/01/27/history-philosophy/)
- [How to Identify Outliers in your Data](http://machinelearningmastery.com/how-to-identify-outliers-in-your-data/)
- [Understand Your Machine Learning Data With Descriptive Statistics in Python](http://machinelearningmastery.com/understand-machine-learning-data-descriptive-statistics-python/)
- [Improve Model Accuracy with Data Pre-Processing](http://machinelearningmastery.com/improve-model-accuracy-with-data-pre-processing/)
- [How to Use Power Transforms for Time Series Forecast Data with Python](http://machinelearningmastery.com/power-transform-time-series-forecast-data-python/)
- [Writing good code: how to reduce the cognitive load of your code – Christia](http://chrismm.com/blog/writing-good-code-reduce-the-cognitive-load/)
- [Book: Deep Learning](http://www.deeplearningbook.org/)
- [Rules of Machine Learning: Best Practices for ML Engineering](http://martin.zinkevich.org/rules_of_ml/rules_of_ml.pdf)
- [What I Wish I'd Known About Equity Before Joining A Unicorn](https://gist.github.com/yossorion/4965df74fd6da6cdc280ec57e83a202d)
- [A data-driven guide to creating successful reddit posts, redux](http://www.randalolson.com/2015/01/11/a-data-driven-guide-to-creating-successful-reddit-posts-redux/)
- [Engineering Data Engineers](https://dashee87.github.io/data%20science/r/Engineering-Data-Engineers/)
- [Principles by Ray Dalio](https://www.principles.com/#Principles)
- [Pythagorean Cup: Practical Joke Chalice Overflows with Ancient Greek Humor](http://99percentinvisible.org/article/pythagorean-cup-practical-joke-chalice-overflows-ancient-greek-humor/)
- [8,760 Hours: How to get the most out of next year](https://alexvermeer.com/8760hours/)
- [Building Microservices? Here is what you should know | cloudncode](https://cloudncode.blog/2016/07/22/msa-getting-started/)
- [A Guide to Deep Learning by YerevaNN](http://yerevann.com/a-guide-to-deep-learning/)
- [Why Clojure is better than C, Python,Ruby and java and why should you care](http://telegra.ph/Why-Clojure-is-better-than-C-PythonRuby-and-java-and-why-should-you-care-12-20)
- [How to ask good questions by Julia Evans](https://jvns.ca/blog/good-questions/)
- [Eric Jang: Summary of NIPS 2016](http://blog.evjang.com/2017/01/nips2016.html)
- [Open Source Tools & Data Science Competitions](http://www.slideshare.net/odsc/owen-zhangopen-sourcetoolsanddscompetitions1?next_slideshow=1)
- [Machine Learning Bookshelf by Ghyslain Gaillard](http://ghyslain.me/bookshelf)
- [Hamiltonian Monte Carlo Explained](http://arogozhnikov.github.io/2016/12/19/markov_chain_monte_carlo.html)
- [Skip Lists: Done Right](http://ticki.github.io/blog/skip-lists-done-right/)
- [The fourth industrial revolution: a primer on Artificial Intelligence](https://medium.com/mmc-writes/the-fourth-industrial-revolution-a-primer-on-artificial-intelligence-ai-ff5e7fffcae1)
- [The Idea of Lisp](https://dev.to/ericnormand/the-idea-of-lisp)
- [How to Become a Data Scientist - On your own - Data Science Central](http://www.datasciencecentral.com/profiles/blogs/how-to-become-a-data-scientist-for-free)
- [An overview of gradient descent optimization algorithms](http://sebastianruder.com/optimizing-gradient-descent/)
- [An Interactive Tutorial on Numerical Optimization](http://www.benfrederickson.com/numerical-optimization/)
- [What is the difference between 'likelihood' and 'probability'?](http://stats.stackexchange.com/questions/2641/what-is-the-difference-between-likelihood-and-probability)
- [What is the intuition behind beta distribution?](http://stats.stackexchange.com/questions/47771/what-is-the-intuition-behind-beta-distribution)
- [Markov Chains explained visually](http://setosa.io/ev/markov-chains/)
- [Notes on GEB](http://cs.lmu.edu/~ray/notes/geb/)
- [Model-based Machine Learning Book](http://mbmlbook.com/toc.html)
- [Learning to superoptimize programs](https://arxiv.org/abs/1611.01787)
- [A stochastic superoptimizer and program synthesizer](https://github.com/StanfordPL/stoke)
- [Hitchhiker's Guide to Data Science, Machine Learning, R, Python](http://www.datasciencecentral.com/profiles/blogs/hitchhiker-s-guide-to-data-science-machine-learning-r-python)
- [H.264 is magic: a technical walkthrough of a remarkable technology.](https://sidbala.com/h-264-is-magic/)
- [6.851: Advanced Data Structures](http://courses.csail.mit.edu/6.851/)
- [Cognitive bias cheat sheet](https://betterhumans.coach.me/cognitive-bias-cheat-sheet-55a472476b18?imm_mid=0ea317#.k3mu9jsv9)
- [How do I become a data scientist without a PhD?](https://www.linkedin.com/pulse/how-do-i-become-data-scientist-without-phd-kai-xin-thia?trk=hp-feed-article-title-channel-add)
- [Ant Colony Optimization For Hackers](http://www.theprojectspot.com/tutorial-post/ant-colony-optimization-for-hackers/10)
- [It’s time for science to abandon the term ‘statistically significant’](https://aeon.co/essays/it-s-time-for-science-to-abandon-the-term-statistically-significant)
- [Readme Driven Development](http://tom.preston-werner.com/2010/08/23/readme-driven-development.html)
- [The Neural Network Zoo](http://www.asimovinstitute.org/neural-network-zoo/#)
- [The Data Processing Inequality](https://medium.com/@akelleh/the-data-processing-inequality-da242b40800b#.8kqzjo39r)
- [100 Skills Every Man Should Know](http://www.artofmanliness.com/2015/09/28/100-skills-every-man-should-know/)
- [The Tao of Boyd: How to Master the OODA Loop](http://www.artofmanliness.com/2014/09/15/ooda-loop/)
- [How to Speed Read](http://www.artofmanliness.com/2009/10/18/how-to-speed-read-like-theodore-roosevelt/)
- [A Primer on Quantum Computing and Algorithms](https://medium.com/@geoff.bradway/a-primer-on-quantum-computing-and-algorithms-d64033abfb52)
- [How to Be a Writer: 10 Tips from Rebecca Solnit](http://lithub.com/how-to-be-a-writer-10-tips-from-rebecca-solnit/?utm_source=pocket&utm_medium=email&utm_campaign=pockethits)
- [Advancing in the Bash Shell](http://samrowe.com/wordpress/advancing-in-the-bash-shell/)
- [How to Write Articles and Essays Quickly and Expertly](http://www.downes.ca/post/38526)
- [An Intuitive Explanation of Convolutional Neural Networks](https://ujjwalkarn.me/2016/08/11/intuitive-explanation-convnets/)
- [Making sense of too much data](http://www.ted.com/playlists/56/making_sense_of_too_much_data)
- [How to build simple, accurate, data-driven, model-free confidence intervals](http://www.analyticbridge.com/profiles/blogs/how-to-build-simple-accurate-data-driven-model-free-confidence-in)
- [Which causal inference book you should read](https://www.bradyneal.com/which-causal-inference-book)
- [Causal Inference for The Brave and True](https://matheusfacure.github.io/python-causality-handbook/landing-page.html)
- [How can we convert values proportional to probabilities to Bernoulli probabilities?](http://stats.stackexchange.com/questions/230413/how-can-we-convert-p1-to-be-bernoulli-distributed?noredirect=1#comment436214_230413)
- [What Great Listeners Actually Do](https://hbr.org/2016/07/what-great-listeners-actually-do)
- [Design Better Data Tables](https://medium.com/mission-log/design-better-data-tables-430a30a00d8c)
- [Why do CPUs have multiple cache levels?](https://fgiesen.wordpress.com/2016/08/07/why-do-cpus-have-multiple-cache-levels/)
- [I Don’t Care How Well You Code, Understand Your Compensation](https://hackernoon.com/i-dont-care-how-well-you-code-understand-your-compensation-a1e810973c5e#.ijrktbl9l)
- [Guide to Financial Statement Analysis / Ratio Analysis](http://www.datasciencecentral.com/profiles/blogs/guide-to-financial-statement-analysis-ratio-analysis)
- [How to Read a Book](http://pne.people.si.umich.edu/PDF/howtoread.pdf)
- [Why are bias nodes used in neural networks?](http://stats.stackexchange.com/questions/185911/why-are-bias-nodes-used-in-neural-networks)
- [Understanding the Bias-Variance Tradeoff](http://scott.fortmann-roe.com/docs/BiasVariance.html)
- [Why Decentralization Isn't as Important as You Think](https://haseebq.com/why-decentralization-isnt-as-important-as-you-think/)
- [Gradient Boosting explained](https://arogozhnikov.github.io/2016/06/24/gradient_boosting_explained.html)
- [Mental Models I Find Repeatedly Useful](https://medium.com/@yegg/mental-models-i-find-repeatedly-useful-936f1cc405d)
- [An Introduction to Model-Based Machine Learning](https://blog.dominodatalab.com/an-introduction-to-model-based-machine-learning/)
- [Quantified self - Wikipedia](https://en.wikipedia.org/wiki/Quantified_self)
- [Computing Your Skill](http://www.moserware.com/2010/03/computing-your-skill.html)
- [A Programmer's Guide to Data Mining](http://guidetodatamining.com/)
- [Understanding Bias: A Pre-requisite For Trustworthy Results](https://medium.com/@akelleh/understanding-bias-a-pre-requisite-for-trustworthy-results-ee590b75b1be#.lcsu8ceij)
- [Central Limit Theorem](http://mfviz.com/central-limit/)
- [The Computational Theory of Mind](https://plato.stanford.edu/entries/computational-mind)
- [Neural Computation and the Computational Theory of Cognition](https://onlinelibrary.wiley.com/doi/full/10.1111/cogs.12012)
- [Computational Thinking](https://www.cs.cmu.edu/~15110-s13/Wing06-ct.pdf)
- [The Theorem Every Data Scientist Should Know](http://www.jeannicholashould.com/the-theorem-every-data-scientist-should-know.html)
- [Feature Engineering: Data scientist's Secret Sauce](http://www.datasciencecentral.com/profiles/blogs/feature-engineering-data-scientist-s-secret-sauce-1)
- [Professional Software Development](https://mixmastamyk.bitbucket.io/pro_soft_dev/)
- [Is It Better to Rent or Buy?](http://www.nytimes.com/interactive/2014/upshot/buy-rent-calculator.html)
- [20 Questions to Detect Fake Data Scientists](http://www.kdnuggets.com/2016/01/20-questions-to-detect-fake-data-scientists.html)
- [If Correlation Doesn’t Imply Causation, Then What Does?](https://medium.com/@akelleh/if-correlation-doesnt-imply-causation-then-what-does-c74f20d26438)
- [Visualize Algorithms based on the Backpropagation](http://neupy.com/2015/07/04/visualize_backpropagation_algorithms.html)
- [Emerging "Universal" FPGA, GPU Platform for Deep Learning](http://www.nextplatform.com/2016/06/29/universal-fpga-gpu-platform-deep-learning/)
- [Penetration Testing Tools Cheat Sheet](https://highon.coffee/blog/penetration-testing-tools-cheat-sheet/)
- [A Guide to Gradient Boosted Trees with XGBoost in Python](https://jessesw.com/XG-Boost/)
- [Open Source Machine Learning Degree](http://www.kdnuggets.com/2016/06/open-source-machine-learning-degree.html)
- [Common shell script mistakes](http://www.pixelbeat.org/programming/shell_script_mistakes.html)
- [Learn Git in 30 Minutes](http://tutorialzine.com/2016/06/learn-git-in-30-minutes/)
- [Why Most Unit Testing is Waste](https://wikileaks.org/ciav7p1/cms/files/Why-Most-Unit-Testing-is-Waste.pdf)
- [Alan Kay's Reading List](http://www.squeakland.org/resources/books/readingList.jsp)
- [The Quiet Crisis unfolding in Software Development — Medium](https://medium.com/@billjordan1/the-quiet-crisis-unfolding-in-software-development-cffbdafbf450)
- [Modern Pandas](https://tomaugspurger.net/posts/modern-1-intro/)
- [Rich Programmer Food](http://steve-yegge.blogspot.com/2007/06/rich-programmer-food.html)
- [Three basic pillars to develop simple and appealing games](http://www.voidbee.com/blog/develop-simple-and-appealing-games)
- [Scratchapixel: Welcome to Computer Graphics](http://scratchapixel.com/)
- [Learn X in Y minutes](https://learnxinyminutes.com/)
- [A Guide to Bayesian Statistics](http://www.countbayesie.stfi.re/blog/2016/5/1/a-guide-to-bayesian-statistics)
- [Cron Best Practices](https://sanctum.geek.nz/arabesque/cron-best-practices/)
- [DevMark: The integration of Marketing and Development teams and the sordid tale behind it ](https://medium.com/@loudalouda/devmark-the-integration-of-marketing-and-development-teams-and-the-sordid-tale-behind-it-8607fbfdd22)
- [The Storyteller’s Guide to the Virtual Reality Audience](https://medium.com/stanford-d-school/the-storyteller-s-guide-to-the-virtual-reality-audience-19e92da57497)
- [Investigating the algorithms that govern our lives](http://www.cjr.org/innovations/investigating_algorithms.php)
- [Datasets Over Algorithms](https://www.edge.org/response-detail/26587)
- [Machine Learning Mastery](http://machinelearningmastery.com/start-here/)
- [Hire like Google](http://www.wired.com/2015/04/hire-like-google)
- [How To Make Yourself Hallucinate Without Taking Any Drugs](http://www.iflscience.com/brain/heres-how-you-can-trip-out-without-taking-any-drugs)
- [Unintuitive Things I’ve Learned about Management](https://medium.com/the-year-of-the-looking-glass/unintuitive-things-i-ve-learned-about-management-f2c42d68604b)
- [Calculus Is So Last Century](http://blog.thedataincubator.com/2016/03/calculus-is-so-last-century/)
- [Open content for self-directed learning in data science](http://nborwankar.github.io/LearnDataScience/)
- [Understanding the Bootstrap 3 Grid System](http://www.tutorialrepublic.com/twitter-bootstrap-tutorial/bootstrap-grid-system.php)
- [Neural networks and deep learning](http://neuralnetworksanddeeplearning.com/index.html)
- [How to Code and Understand DeepMind's Neural Stack Machine](https://iamtrask.github.io/2016/02/25/deepminds-neural-stack-machine)
- [Salary Negotiation and Job Hunting for Developers](https://www.twilio.com/blog/2016/02/patrick-mckenzie-on-salary-negotiation-job-hunting.html)
- [20 Ways to Supercharge Your Ability to Learn](http://time.com/3765494/supercharge-ability-learn/?xid=time_socialflow_facebook)
- [Why I No Longer Use MVC Frameworks](http://www.infoq.com/articles/no-more-mvc-frameworks)
- [Rithmomachy - Wikipedia](https://en.wikipedia.org/wiki/Rithmomachy)
- [Why I Strive to be a 0.1x Engineer](http://benjiweber.co.uk/blog/2016/01/25/why-i-strive-to-be-a-0-1x-engineer/)
- [7 Bad Speaking Habits to Break Immediately](http://www.entrepreneur.com/article/248614)
- [The Open Guide to Equity Compensation](https://github.com/jlevy/og-equity-compensation)
- [How to C in 2016](https://matt.sh/howto-c)
- [The Twitch Statistics Pipeline](https://blog.twitch.tv/en/2014/04/04/twitch-data-analysis-part-1-of-3-the-twitch-statistics-pipeline-51556a14c961)
- [Mindfulness and Brain Anti-Aging: 9 Steps to Better Neuroplasticity](http://hubpages.com/health/Brain-Training-Improve-Your-Neuroplasticity-with-10-Easy-Tips)
- [10 ways to get better at small talk](http://www.businessinsider.com.au/how-to-get-better-at-small-talk-2015-10)
- [6 Things The Most Productive People Do Every Day](http://www.bakadesuyo.com/2014/06/most-productive-people/)
- [20 Signs You’ve Evolved As A Person](https://medium.com/@benjaminhardy/20-signs-you-ve-evolved-as-a-person-dde0bab8277b#.oz9ik19g1)
- [IT Security tips for startups](https://www.reddit.com/r/startups/comments/3quon8/it_security_tips_for_startups/)
- [The Big List of TDD and Unit Testing Knowledge](https://dzone.com/articles/the-big-list-of-tdd-and-unit-testing-knowledge)
- [Statistics for Hackers](https://speakerdeck.com/jakevdp/statistics-for-hackers)
- [Things I was unprepared for as a lead developer](http://dev-human.com/entries/2015/09/07/things-i-was-unprepared-for/)
- [The Smartest Ways to Network at a Party](http://www.wsj.com/articles/the-smartest-ways-to-network-at-a-party-1442249499)
- [How does a HashMap work in JAVA](http://coding-geek.com/how-does-a-hashmap-work-in-java/?ref=dzone)
- [Writing a Simple OS From Scratch](https://github.com/tcharding/os-from-scratch?tab=readme-ov-file)
- [Ramblings on code review](http://glen.nu/ramblings/oncodereview.php)
- [Feature Branch Workflow](https://www.atlassian.com/git/tutorials/comparing-workflows/feature-branch-workflow)
- [This 90-Day Plan Turns Engineers into Remarkable Managers](http://firstround.com/review/this-90-day-plan-turns-engineers-into-remarkable-managers/)
- [Machine Learning Class 10-701](http://www.computervisiontalks.com/tag/machine-learning-class-10-701/)
- [How a Car Works](http://www.howacarworks.com/)
- [Introduction to Microservices](https://www.nginx.com/blog/introduction-to-microservices/)
- [Om Next](https://www.youtube.com/watch?v=ByNs9TG30E8&)
- [Designing a Secure REST (Web) API without OAuth](http://www.thebuzzmedia.com/designing-a-secure-rest-api-without-oauth-authentication/)
- [Structure and Interpretation of Computer Programs](https://web.mit.edu/6.001/6.037/sicp.pdf)
- [The algebra (and calculus!) of algebraic data types](https://codewords.recurse.com/issues/three/algebra-and-calculus-of-algebraic-data-types/)
- [When and Why Your Code Starts to Smell Bad](http://www.cs.wm.edu/~denys/pubs/ICSE%2715-BadSmells-CRC.pdf)
- [Algorithmic Music Generation with Recurrent Neural Networks](https://m.youtube.com/watch?v=0VTI1BBLydE)
- [Top 12 Things Every Software Engineer Should Know](http://www.sw-engineering-candies.com/blog-1/top10thingseverysoftwareengineershouldknow)
- [21 management things I learned at Imgur](https://medium.com/@gerstenzang/21-management-things-i-learned-at-imgur-7abb72bdf8bf)
- [The Heretic's Guide to Global Finance: Hacking the Future of Money](http://suitpossum.blogspot.com.au/2015/06/high-frequency-trading-guide.html)
- [10 Rules for Writing Safety Critical Code](http://spinroot.com/p10/)
- [Tactical Web Application Penetration Testing Methodology](http://www.gironsec.com/WebHacking101.pdf)
- [How to name things: the hardest problem in programming](http://www.slideshare.net/mobile/pirhilton/how-to-name-things-the-hardest-problem-in-programming)
- [Balancing Multiplayer Competitive Games](https://static1.squarespace.com/static/50f14d35e4b0d70ab5fc4f24/t/53ef1dbae4b0a6d424125a6f/1408179642248/GDC+2009+sirlin+handout6.pdf)
- [Developing Real-Time Software with Java SE APIs](http://www.oracle.com/technetwork/articles/java/nilsen-realtime-pt1-2264405.html)
- [Bamboo Mathematicians](http://phenomena.nationalgeographic.com/2015/05/15/bamboo-mathematicians/)
- [Intro to Higher Order Functions](http://comp-phil.blogspot.com/2015/05/intro-to-higher-order-functions.html)
- [9 Anti-Patterns Every Programmer Should Be Aware Of](http://sahandsaba.com/nine-anti-patterns-every-programmer-should-be-aware-of-with-examples.html)
- [Code Review Best Practices](http://kevinlondon.com/2015/05/05/code-review-best-practices.html)
- [An Introduction to Quantum Computing for Non-Physicists](http://arxiv.org/pdf/quant-ph/9809016v2.pdf)
- [Consistency and discipline over motivation](http://blog.donnywals.com/consistency-and-discipline-over-motivation/)
- [Clojure: How I Start](https://howistart.org/posts/clojure/1)
- [Arch Linux - Do it yourself](http://dolftax.com/2014/05/Arch-Linux-Do-It-Yourself/)
- [Who Says C is Simple?](http://www.eecs.berkeley.edu/~necula/cil/cil016.html)
- [Elegant APIs with JSON Schema](https://brandur.org/elegant-apis)
- [Templating in C](http://blog.pkh.me/p/20-templating-in-c.html)
- [Harmful GOTO's, Premature Optimizations, and Programming Myths are The Root of all Evil](http://videlalvaro.github.io/2015/02/programming-myths.html?)
- [Online Algorithms in High-frequency Trading](http://queue.acm.org/detail.cfm?id=2534976)
- [Authentication Cheat Sheet](https://www.owasp.org/index.php/Authentication_Cheat_Sheet)
- [16 Things](http://a16z.com/2015/01/22/16-things/)
- [Ask HN: What's the best way to write an API spec?](https://news.ycombinator.com/item?id=8912897)
- [Python Tips and Traps](https://www.airpair.com/python/posts/python-tips-and-traps)
- [Write a Shell in C](http://stephen-brennan.com/2015/01/16/write-a-shell-in-c/)
- [Denial of Service via Algorithmic Complexity Attacks](https://www.usenix.org/legacy/events/sec03/tech/full_papers/crosby/crosby_html/index.html)
- [Flow-based Programming](http://www.jpaulmorrison.com/fbp/)
- [Linux From Scratch](https://www.linuxfromscratch.org/)
- [The little book about OS development](http://littleosbook.github.io/book.pdf)
- [Stop More Bugs with our Code Review Checklist - Fog Creek Blog](http://blog.fogcreek.com/increase-defect-detection-with-our-code-review-checklist-example/)
- [Introduction to Category Theory](http://www.cs.nott.ac.uk/~gmh/cat.html)
- [The 80/20 rule... for storage systems.](http://www.cohodata.com/blog/2014/12/10/8020-rule-storage-systems/)
- [Lisp Macro](http://c2.com/cgi/wiki?LispMacro)
- [Programming and Programming Languages](http://papl.cs.brown.edu/2020/)
- [How Products Are Made](http://www.madehow.com/)
- [Great Works in Programming Languages](http://www.cis.upenn.edu/~bcpierce/courses/670Fall04/GreatWorksInPL.shtml)
- [Functional Programming Patterns (BuildStuff &#39;14)](http://www.slideshare.net/ScottWlaschin/fp-patterns-buildstufflt)
- [Keeping it Simple: C Pointers Explained, Really](http://karwin.blogspot.com.au/2012/11/c-pointers-explained-really.html)
- [How Does a Debugger Work? - Kevin&#39;s homepage](http://blog.0x972.info/?d=2014/11/13/10/40/50-how-does-a-debugger-work)
- [Brain --dump: Say hello to x64 Assembly \[part 1\]](http://0xax.blogspot.com.au/2014/08/say-hello-to-x64-assembly-part-1.html)
- [The Design and Implementation of Probabilistic Programming Languages](http://dippl.org/)
- [Building C Projects](http://nethack4.org/blog/building-c.html)
- [Coding for Performance: Data alignment and structures | Intel® Developer Zo](https://software.intel.com/en-us/articles/coding-for-performance-data-alignment-and-structures)
- [Will It Optimize?](http://ridiculousfish.com/blog/posts/will-it-optimize.html)
- [32 Sci-Fi Novels You Should Read](http://howtosplitanatom.com/news/32-sci-fi-novels-you-should-read/)
- [The Web Design Process](http://www.newdesigngroup.ca/blog/web-design-process-infographic/)
- [A crash-course on lambda calculus](https://medium.com/@ayanonagon/the-y-combinator-no-not-that-one-7268d8d9c46)
- [Essential Coding Theory](https://cse.buffalo.edu/faculty/atri/courses/coding-theory/book/)
- [The Art of Profitability](https://www.codingvc.com/p/the-art-of-profitability)
- [Linux Performance](http://www.brendangregg.com/linuxperf.html)
- [Amit’s Game Programming Information](http://www-cs-students.stanford.edu/~amitp/gameprog.html)
- [The Most Common Errors in Undergraduate Mathematics](http://www.math.vanderbilt.edu/~schectex/commerrs/)
- [Cheat Sheet: Writing Python 2-3 compatible code](http://python-future.org/compatible_idioms.html)
- [A Gentle Introduction to Backpropagation](http://numericinsight.blogspot.com.br/2014/07/a-gentle-introduction-to-backpropagation.html)
- [Type Safety](http://www.pl-enthusiast.net/2014/08/05/type-safety/)
- [Recommendations for good resources on writing good error messages](http://ux.stackexchange.com/questions/11591/recommendations-for-good-resources-on-writing-good-error-messages)
- [Designing game narrative](http://hitboxteam.com/designing-game-narrative)
- [Markov Chains: A visual explanation](http://setosa.io/blog/2014/07/26/markov-chains/index.html)
- [Continuous integration vs. delivery vs. deployment](http://blogs.atlassian.com/2014/04/practical-continuous-deployment/)
- [The TTY demystified](http://www.linusakesson.net/programming/tty/index.php)
- [The Architecture of Open Source Applications](http://aosabook.org/en/index.html)
- [Use Bash Strict Mode](http://redsymbol.net/articles/unofficial-bash-strict-mode/)
- [3 shell scripts to improve your writing](http://matt.might.net/articles/shell-scripts-for-passive-voice-weasel-words-duplicates/)
- [Don't Be Scared Of Functional Programming](http://www.smashingmagazine.com/2014/07/02/dont-be-scared-of-functional-programming/)
- [The Art of Assembly Language](http://www.ic.unicamp.br/~pannain/mc404/aulas/pdfs/Art Of Intel x86 Assembly.pdf)
- [“Market making” in an order book model and its impact on the spread](http://arxiv.org/pdf/1003.3796.pdf)
- [From an Artificial Neural Network to a Stock Market Day-Trading System](http://homepages.dcc.ufmg.br/~glpappa/papers/Conegundesetal-2009-IJCNN.pdf)
- [Startup Legal Playbook: How to Get Started, Legally](https://fi.co/insight/startup-legal-playbook)
- [An AWK Primer](https://en.wikibooks.org/wiki/An_Awk_Primer)
- [Learning Functional Programming - A roadmap](http://amitdev.github.io/coding/2014/06/29/Learning-Functional-Programming/)
- [Clojure and Hygienic Macros](http://xivilization.net/~marek/blog/2013/09/17/clojure-and-hygienic-macros/)
- [Improved default settings for Linux machines](http://tobert.github.io/post/2014-06-24-linux-defaults.html)
- [What actually happens when you plug in a USB device?](https://www.technovelty.org/linux/what-actually-happens-when-you-plug-in-a-usb-device.html)
- [MVC implemented in pure C](http://stackoverflow.com/questions/9355021/mvc-implemented-in-pure-c)
- [The Lambda Calculus for Absolute Dummies](http://palmstroem.blogspot.com.br/2012/05/lambda-calculus-for-absolute-dummies.html)
- [Five things that make Go fast](http://dave.cheney.net/2014/06/07/five-things-that-make-go-fast)
- [A Hacker’s Guide to Git](http://wildlyinaccurate.com/a-hackers-guide-to-git)
- [Writing a File System in Linux Kernel](http://kukuruku.co/hub/nix/writing-a-file-system-in-linux-kernel)
- [What Does a Neural Network Actually Do?](http://moalquraishi.wordpress.com/2014/05/25/what-does-a-neural-network-actually-do)
- [Power to the edge (management technique) - Wikipedia](http://en.wikipedia.org/wiki/Power_to_the_edge_(management_technique))
- [The Art of Unix Programming](http://www.catb.org/~esr/writings/taoup/html/)
- [Simple Sketches for Diagramming your Software Architecture        ](https://www.methodsandtools.com/archive/softwarearchitecturesketches.php)
- [Creating Style Guides](http://alistapart.com/article/creating-style-guides)
- [Decoding Doom RPG](http://www.neocomputer.org/projects/doomrpg/)
- [How we solved the infamous sliding bug](http://joostdevblog.blogspot.nl/2014/04/the-infamous-sliding-bug.html)
- [If you want fast code, don't use assembly](http://quetzalcoatal.blogspot.co.uk/2014/04/if-you-want-fast-code-dont-use-assembly.html)
- [The Idiots Guide to High Frequency Trading](http://blogmaverick.com/2014/04/03/the-idiots-guide-to-high-frequency-trading/)
- [Functionally Solving Problems](http://learnyouahaskell.com/functionally-solving-problems)
- [How many genetic ancestors do I have?](http://gcbias.org/2013/11/11/how-does-your-number-of-genetic-ancestors-grow-back-over-time/)
- [Low-level is easy](http://www.yosefk.com/blog/low-level-is-easy.html)
